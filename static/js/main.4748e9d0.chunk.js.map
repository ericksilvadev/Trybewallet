{"version":3,"sources":["actions/index.js","actions/types.js","pages/Login.jsx","components/Header.jsx","components/CategorySelect.jsx","components/PaymentSelect.jsx","components/ExpenseForm.jsx","components/EditExpenseForm.jsx","components/TableBody.jsx","components/ExpenseTable.jsx","components/Expenses.jsx","pages/Wallet.jsx","App.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/store.js","serviceWorker.js","index.js"],"names":["fetchAPI","type","fetchCurrencies","dispatch","a","fetch","response","json","currencies","payload","Login","props","state","email","password","validEmail","validPassword","redirect","activeBtn","handleChange","bind","handleClick","validate","localStorage","expenses","setItem","JSON","stringify","this","emailValidate","passwordValidate","test","length","setState","target","value","name","evt","preventDefault","saveEmail","to","window","matchMedia","matches","className","src","alt","action","htmlFor","placeholder","autoComplete","data-testid","onChange","onClick","disabled","React","Component","connect","actionSaveEmail","Header","formatter","Intl","NumberFormat","style","currency","total","parse","getItem","format","defaultProps","user","wallet","CategorySelect","id","PaymentSelect","initialState","description","method","tag","ExpenseForm","handleSubmit","getCurrencies","addExpense","totalValue","ask","exchangeRates","filteredCurrencies","Object","keys","filter","curr","onSubmit","map","key","actionAddExpense","EditExpenseForm","editExpense","editId","Number","editExpenseBtn","TableBoby","reduce","acc","cur","removeExpense","toggleEdit","expense","currencyName","split","toFixed","tableHeaders","ExpenseTable","editForm","header","index","actionRemoveExpense","toggleEditBtn","Expenses","loading","isFetching","Wallet","App","exact","path","component","INITIAL_STATE","error","fileredExpenses","newState","sort","b","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4748e9d0.chunk.js","sourcesContent":["import {\n  SAVE_EMAIL,\n  GET_CURRENCIES,\n  FETCH_API,\n  ADD_EXPENSE,\n  REMOVE_EXPENSE,\n  TOGGLE_EDIT,\n  EDIT_EXPENSE,\n} from './types';\n\nexport const actionSaveEmail = (payload) => ({ type: SAVE_EMAIL, payload });\n\nconst getCurrencies = (payload) => ({ type: GET_CURRENCIES, payload });\n\nconst fetchAPI = () => ({ type: FETCH_API });\n\n// const failedRequest = (payload) => ({ type: FAILED_REQUEST, payload });\n\nexport const actionAddExpense = (payload, total) => ({\n  type: ADD_EXPENSE, payload, total });\n\nexport const actionRemoveExpense = (id, value) => ({ type: REMOVE_EXPENSE, id, value });\n\nexport const toggleEditBtn = (id) => ({ type: TOGGLE_EDIT, id });\n\nexport const editExpenseBtn = (payload, total) => ({\n  type: EDIT_EXPENSE, payload, total });\n\nexport const fetchCurrencies = () => {\n  const endpoint = 'https://economia.awesomeapi.com.br/json/all';\n  return async (dispatch) => {\n    dispatch(fetchAPI);\n    const response = await fetch(endpoint);\n    const currencies = await response.json();\n    dispatch(getCurrencies(currencies));\n  };\n};\n","export const SAVE_EMAIL = 'SAVE_EMAIL';\nexport const GET_CURRENCIES = 'GET_CURRENCIES';\nexport const FETCH_API = 'FETCH_API';\nexport const FAILED_REQUEST = 'FAILED_REQUEST';\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\nexport const TOGGLE_EDIT = 'TOGGLE_EDIT';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { actionSaveEmail } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      validEmail: true,\n      validPassword: true,\n      redirect: false,\n      activeBtn: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    if (!localStorage.expenses) {\n      localStorage.setItem('expenses', JSON.stringify([]));\n      localStorage.setItem('total', JSON.stringify(0));\n    }\n  }\n\n  validate() {\n    const { email, password } = this.state;\n    const emailValidate = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const passwordValidate = /(.+){6,25}/;\n    if (!emailValidate.test(email) && email.length > 5) {\n      this.setState({ validEmail: false, activeBtn: false });\n      return false;\n    }\n    this.setState({ validEmail: true });\n    if (!passwordValidate.test(password) && password.length > 2) {\n      this.setState({ validPassword: false, activeBtn: false });\n      return false;\n    }\n    this.setState({ validPassword: true });\n    if (passwordValidate.test(password) && emailValidate.test(email)) {\n      this.setState({ validPassword: true, activeBtn: true });\n      return true;\n    }\n  }\n\n  handleChange({ target }) {\n    const { value, name } = target;\n    this.setState({ [name]: value }, () => this.validate());\n  }\n\n  handleClick(evt) {\n    evt.preventDefault();\n    const { saveEmail } = this.props;\n    const { email } = this.state;\n    if (this.validate()) {\n      saveEmail(email);\n      this.setState({ redirect: true });\n    }\n  }\n\n  render() {\n    const {\n      email, password, redirect, activeBtn, validEmail, validPassword,\n    } = this.state;\n    if (redirect) { return <Redirect to=\"/carteira\" />; }\n    if (window.matchMedia('(max-width: 768px)').matches) {\n      return <p className=\"mobile\">Entre pelo desktop para visualizar esta aplicação</p>\n    }\n    return (\n      <div className=\"home-page\">\n        <section className=\"info-container\">\n          <img\n            src=\"https://image.flaticon.com/icons/png/512/4216/4216710.png\"\n            alt=\"wallet icon\"\n          />\n          <p>Tenha controle das suas despesas de forma rápida e prática</p>\n        </section>\n        <section className=\"login-container\">\n          <div className=\"heading\">\n            <h1>Bem vindo ao TrybeWallet!</h1>\n            <h2 className=\"login-title\">Faça login para acessar sua conta*</h2>\n          </div>\n          <form action=\"#\" className=\"login-form\">\n            <div className=\"login-inputs-container\">\n              <label htmlFor=\"email\">\n                Email*\n                <br />\n                <input\n                  type=\"text\"\n                  placeholder=\"email@exemplo.com\"\n                  autoComplete=\"off\"\n                  data-testid=\"email-input\"\n                  className={ validEmail ? 'login-input' : 'invalid-email login-input' }\n                  name=\"email\"\n                  value={ email }\n                  onChange={ this.handleChange }\n                />\n                { !validEmail\n                  && <p className=\"email-error\">\n                    Email inválido\n                  </p>}\n              </label>\n              <label htmlFor=\"password\">\n                Senha*\n                <br />\n                <input\n                  type=\"password\"\n                  data-testid=\"password-input\"\n                  className={ validPassword ? 'pass-input' : 'invalid-pass pass-input' }\n                  name=\"password\"\n                  value={ password }\n                  onChange={ this.handleChange }\n                />\n                { !validPassword\n                  && <p className=\"pass-error\">\n                    A senha deve conter no mínimo 6 caracteres\n                  </p>}\n              </label>\n              <button\n                type=\"submit\"\n                className=\"login-btn\"\n                onClick={ this.handleClick }\n                disabled={ !activeBtn }\n              >\n                Entrar\n              </button>\n            </div>\n          </form>\n          <footer className=\"footer\">\n            <p>\n              *Todas as informações inseridas NÃO são salvas. Este é um site fictício.\n            </p>\n          </footer>\n        </section>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  saveEmail: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveEmail: (payload) => dispatch(actionSaveEmail(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass Header extends React.Component {\n  render() {\n    const formatter = new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    });\n    // const { total = 0 } = this.props;\n    const total = JSON.parse(localStorage.getItem('total'));\n    return (\n      <header className=\"header\">\n        {/* <Logo className=\"logo\" /> */}\n        <div className=\"total\">\n          <h2>{total < 0 ? formatter.format(0) : formatter.format(total)}</h2>\n          <p data-testid=\"total-field\">\n            Despesas totais\n          </p>\n        </div>\n        <div className=\"currency-container\">\n          <p data-testid=\"header-currency-field\">Moeda de conversão</p>\n          <p className=\"currency\">BRL</p>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.defaultProps = {\n  total: 0,\n};\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  total: state.wallet.total,\n});\n\nexport default connect(mapStateToProps, null)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class CategorySelect extends React.Component {\n  render() {\n    const { onChange, value } = this.props;\n    return (\n      <label htmlFor=\"category\">\n        Tag\n        <select\n          name=\"tag\"\n          id=\"category\"\n          value={ value }\n          onChange={ onChange }\n          data-testid=\"tag-input\"\n        >\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nCategorySelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PaymentSelect extends React.Component {\n  render() {\n    const { onChange, value } = this.props;\n    return (\n      <label htmlFor=\"payment\">\n        Método de Pagamento\n        <select\n          data-testid=\"method-input\"\n          name=\"method\"\n          id=\"payment\"\n          value={ value }\n          onChange={ onChange }\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nPaymentSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CategorySelect from './CategorySelect';\nimport PaymentSelect from './PaymentSelect';\nimport { fetchCurrencies, actionAddExpense } from '../actions';\n\nconst initialState = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n};\n\nclass ExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { value, name } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(evt) {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n    evt.preventDefault();\n    const expenses = JSON.parse(localStorage.getItem('expenses'));\n    const total = JSON.parse(localStorage.getItem('total'));\n    const { currencies, addExpense } = this.props;\n    const { value, currency } = this.state;\n    const { ask: multiplier } = currencies[currency];\n    const totalValue = value * multiplier;\n    addExpense(\n      { id: expenses.length, ...this.state, exchangeRates: currencies },\n      total + totalValue,\n    );\n    this.setState(initialState);\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencies } = this.props;\n    const currencyLength = 3;\n    const filteredCurrencies = [...Object.keys(currencies)]\n      .filter((curr) => curr.length === currencyLength);\n    return (\n      <form className=\"expenses-form\" onSubmit={ this.handleSubmit }>\n        <label htmlFor=\"value\">\n          Valor\n          <input\n            className=\"value\"\n            type=\"number\"\n            id=\"value\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda\n          <select\n            name=\"currency\"\n            id=\"currency\"\n            value={ currency }\n            onChange={ this.handleChange }\n          >\n            {filteredCurrencies.map((curr) => (\n              <option key={ curr } value={ curr }>{curr}</option>\n            ))}\n          </select>\n        </label>\n        <PaymentSelect onChange={ this.handleChange } value={ method } />\n        <CategorySelect onChange={ this.handleChange } value={ tag } />\n        <label htmlFor=\"description\">\n          Descrição\n          <textarea\n            id=\"description\"\n            type=\"text\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <button className=\"add\" type=\"submit\">Adicionar</button>\n      </form>\n    );\n  }\n}\n\nExpenseForm.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  addExpense: PropTypes.func.isRequired,\n  currencies: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.object).isRequired,\n    PropTypes.object]).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n  addExpense: (payload, total) => dispatch(actionAddExpense(payload, total)),\n});\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  total: state.wallet.total,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CategorySelect from './CategorySelect';\nimport PaymentSelect from './PaymentSelect';\nimport { fetchCurrencies, editExpenseBtn } from '../actions';\n\nconst initialState = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n};\n\nclass EditExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { value, name } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    const expenses = JSON.parse(localStorage.getItem('expenses'));\n    const total = JSON.parse(localStorage.getItem('total'));\n    const { editExpense, editId } = this.props;\n    const { value } = this.state;\n    const { exchangeRates } = expenses[Number(editId)];\n    const multiplier = exchangeRates.ask;\n    const totalValue = value * multiplier;\n    editExpense(\n      { id: editId, ...this.state, exchangeRates },\n      total + totalValue,\n    );\n    // this.setState(initialState);\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencies } = this.props;\n    const currencyLength = 3;\n    const filteredCurrencies = [...Object.keys(currencies)]\n      .filter((curr) => curr.length === currencyLength);\n    return (\n      <form className=\"expenses-form\" onSubmit={ this.handleSubmit }>\n        <label htmlFor=\"value\">\n          Valor\n          <input\n            className=\"value\"\n            type=\"number\"\n            id=\"value\"\n            data-testid=\"value-input\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda\n          <select\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            id=\"currency\"\n            value={ currency }\n            onChange={ this.handleChange }\n          >\n            {filteredCurrencies.map((curr) => (\n              <option key={ curr } value={ curr }>{curr}</option>\n            ))}\n          </select>\n        </label>\n        <PaymentSelect onChange={ this.handleChange } value={ method } />\n        <CategorySelect onChange={ this.handleChange } value={ tag } />\n        <label htmlFor=\"description\">\n          Descrição\n          <textarea\n            data-testid=\"description-input\"\n            id=\"description\"\n            type=\"text\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <button className=\"edit\" type=\"submit\">Editar</button>\n      </form>\n    );\n  }\n}\n\nEditExpenseForm.propTypes = {\n  editId: PropTypes.number.isRequired,\n  editExpense: PropTypes.func.isRequired,\n  currencies: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.object).isRequired,\n    PropTypes.object]).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n  editExpense: (payload, total) => dispatch(editExpenseBtn(payload, total)),\n});\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  total: state.wallet.total,\n  editId: state.wallet.editId,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class TableBoby extends React.Component {\n  constructor() {\n    super();\n    this.totalValue = this.totalValue.bind(this);\n  }\n\n  totalValue() {\n    const expenses = JSON.parse(localStorage.getItem('expenses'));\n    return expenses.reduce((acc, cur) => (\n      acc + Number(cur.value) * Number(cur.exchangeRates[cur.currency].ask)), 0);\n  }\n\n  render() {\n    const expenses = JSON.parse(localStorage.getItem('expenses'));\n    const { removeExpense, toggleEdit } = this.props;\n    return (\n      <tbody className=\"table-body\">\n        { expenses.map((expense) => {\n          const {\n            id, description, tag, method, value, exchangeRates, currency } = expense;\n          const currencyName = exchangeRates[currency].name.split('/');\n          return (\n            <tr key={ id }>\n              <td className=\"description\">{description}</td>\n              <td>{tag}</td>\n              <td>{method}</td>\n              <td>{currencyName[0]}</td>\n              <td className=\"expense\">{Number(value).toFixed(2)}</td>\n              <td className=\"cambio\">{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n              <td className=\"currency\">Real</td>\n              <td className=\"expense\">\n                {Number(value * exchangeRates[currency].ask).toFixed(2)}\n              </td>\n              <td>\n                <button\n                  id={ id }\n                  type=\"button\"\n                  data-testid=\"edit-btn\"\n                  name=\"edit\"\n                  className=\"edit fas fa-edit\"\n                  onClick={ () => toggleEdit(id) }\n                />\n                <button\n                  id={ id }\n                  type=\"button\"\n                  name=\"delete\"\n                  className=\"fas fa-trash\"\n                  data-testid=\"delete-btn\"\n                  onClick={ () => removeExpense(id,\n                    this.totalValue() - Number(value * exchangeRates[currency].ask)\n                      .toFixed(2)) }\n                />\n              </td>\n            </tr>);\n        })}\n      </tbody>\n    );\n  }\n}\n\nTableBoby.propTypes = {\n  removeExpense: PropTypes.func.isRequired,\n  toggleEdit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TableBoby from './TableBody';\nimport { actionRemoveExpense, toggleEditBtn } from '../actions';\n\nconst tableHeaders = [\n  'Descrição',\n  'Tag',\n  'Método de pagamento',\n  'Moeda',\n  'Valor',\n  'Câmbio utilizado',\n  'Moeda de conversão',\n  'Valor convertido',\n  'Editar/Excluir',\n];\n\nclass ExpenseTable extends React.Component {\n  render() {\n    const { removeExpense, toggleEdit, expenses, editForm } = this.props;\n    return (\n      <table className=\"expenses\">\n        <thead className=\"table-header\">\n          <tr>\n            { tableHeaders.map((header, index) => (\n              <th key={ header } className={ index === 0 ? 'description' : '' }>\n                { header }\n              </th>\n            )) }\n          </tr>\n        </thead>\n        <TableBoby\n          editForm={ editForm }\n          removeExpense={ removeExpense }\n          toggleEdit={ toggleEdit }\n          expenses={ expenses }\n        />\n      </table>\n    );\n  }\n}\n\nExpenseTable.propTypes = {\n  editForm: PropTypes.bool.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeExpense: PropTypes.func.isRequired,\n  toggleEdit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  editForm: state.wallet.editForm,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeExpense: (id, value) => dispatch(actionRemoveExpense(id, value)),\n  toggleEdit: (id) => dispatch(toggleEditBtn(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport EditExpenseForm from './EditExpenseForm';\nimport ExpenseTable from './ExpenseTable';\nimport { fetchCurrencies } from '../actions';\n\nclass Expenses extends React.Component {\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  render() {\n    const expenses = JSON.parse(localStorage.getItem('expenses'));\n    const { loading, editForm } = this.props;\n    if (loading) { return <p> CARREGANDO... </p>; }\n    return (\n      <>\n        { editForm && <EditExpenseForm /> }\n        { !editForm && <ExpenseForm /> }\n        { expenses.length > 0\n          ? <ExpenseTable />\n          : <p className=\"no-expenses-text\">Você ainda não possui nenhuma despesa</p> }\n      </>\n    );\n  }\n}\n\nExpenses.propTypes = {\n  loading: PropTypes.bool,\n  getCurrencies: PropTypes.func.isRequired,\n  editForm: PropTypes.bool.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nExpenses.defaultProps = {\n  loading: true,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n});\n\nconst mapStateToProps = (state) => ({\n  loading: state.wallet.isFetching,\n  editForm: state.wallet.editForm,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Expenses);\n","import React from 'react';\nimport Header from '../components/Header';\nimport Expenses from '../components/Expenses';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <Expenses />\n      </>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Login, Wallet } from './pages';\nimport './css/main.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/carteira\" component={ Wallet } />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { SAVE_EMAIL } from '../actions/types';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_EMAIL:\n    return { ...state, email: action.payload };\n  default: return state;\n  }\n};\n\nexport default user;\n","/* eslint-disable max-lines-per-function */\nimport {\n  GET_CURRENCIES,\n  FETCH_API,\n  FAILED_REQUEST,\n  ADD_EXPENSE,\n  REMOVE_EXPENSE,\n  TOGGLE_EDIT,\n  EDIT_EXPENSE,\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isFetching: false,\n  error: '',\n  total: 0,\n  editForm: false,\n  editId: '',\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case FETCH_API:\n    return { ...state, isFetching: true };\n  case GET_CURRENCIES:\n    return { ...state, isFetching: false, currencies: action.payload };\n  case FAILED_REQUEST:\n    return { ...state, isFetching: false, error: action.payload };\n  case ADD_EXPENSE: {\n    const expenses = JSON.parse(localStorage.getItem('expenses'));\n    localStorage.setItem('expenses', JSON.stringify([...expenses, action.payload]));\n    localStorage.setItem('total', JSON.stringify(action.total));\n    return {\n      ...state, expenses: [...state.expenses, action.payload], total: action.total };\n  }\n  case REMOVE_EXPENSE: {\n    const expenses = JSON.parse(localStorage.getItem('expenses'));\n    const fileredExpenses = [...expenses]\n      .filter((expense) => expense.id !== Number(action.id));\n    localStorage\n      .setItem('expenses', JSON.stringify([...fileredExpenses]));\n    localStorage.setItem('total', JSON.stringify(action.value));\n    return {\n      ...state,\n      expenses: fileredExpenses,\n      total: action.value,\n    };\n  }\n  case TOGGLE_EDIT:\n    return {\n      ...state, editForm: true, editId: action.id };\n  case EDIT_EXPENSE: {\n    const expenses = JSON.parse(localStorage.getItem('expenses'));\n    const newState = {\n      ...state,\n      editForm: false,\n      expenses: [...expenses\n        .filter((expense) => expense.id !== action.payload.id),\n      { ...action.payload }].sort((a, b) => a.id - b.id) };\n    const total = newState.expenses.reduce((acc, cur) => (\n      acc + Number(cur.value) * Number(cur.exchangeRates[cur.currency].ask)), 0);\n    localStorage\n      .setItem('expenses', JSON.stringify([...newState.expenses]));\n    localStorage.setItem('total', JSON.stringify(total));\n    return {\n      ...state,\n      ...state,\n      editForm: false,\n      expenses: [...state.expenses\n        .filter((expense) => expense.id !== action.payload.id),\n      { ...action.payload }].sort((a, b) => a.id - b.id),\n      total,\n    };\n  }\n  default: return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}